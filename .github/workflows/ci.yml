name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build
      run: cargo build --verbose
      
    - name: Run tests
      run: cargo test --verbose
      
    - name: Run integration tests
      run: cargo test --test integration_tests --verbose

  build-development:
    name: Build Development Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release
      run: cargo build --release
      
    - name: Create development archive
      run: |
        mkdir -p artifacts
        cp target/release/ai-cli artifacts/
        cd artifacts
        tar -czf ../ai-cli-development-$(date +%Y%m%d-%H%M%S).tar.gz *
        
    - name: Upload development artifacts
      uses: actions/upload-artifact@v3
      with:
        name: development-build
        path: ai-cli-development-*.tar.gz

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release
      run: cargo build --release
      
    - name: Create release archive
      run: |
        mkdir -p artifacts
        cp target/release/ai-cli artifacts/
        cd artifacts
        tar -czf ../ai-cli-release-$(date +%Y%m%d-%H%M%S).tar.gz *
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-build
        path: ai-cli-release-*.tar.gz 